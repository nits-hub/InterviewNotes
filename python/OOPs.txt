1. class - To create a class, use the keyword class:
    e.g., 
        class MyClass:
            x = 5
2. object - Now we can use the class named MyClass to create objects:
    e.g., 
        class1 = MyClass()
        print(class1.x)

    * The examples above are classes and objects in their simplest form, and are not really useful in real life applications.        

3. The __init__() function - 
    -> To understand the meaning of classes we have to understand the built-in __init__() function.
    -> All classes have a function called __init__(), which is always executed when the class is being initiated.
    -> Use the __init__() function to assign values to object properties, or other operations that are necessary to do when the object is being created:

    e.g.,
        class Person:
            def __init__(self, name, age):
                self.name = name
                self.age = age 
            
        p1 = Person("A",26)
        print(p1.name)
        print(p1.age)

        Note - 
            * The __init__() function is called automatically every time the class is being used to create a new object.
    
    3(a) The __str__() Function - 
        -> The __str__() function controls what should be returned when the class object is represented as a string.
        -> If the __str__() function is not set, the string representation of the object is returned:

        def __str__(self):
            return f"{self.name}({self.age})"

        //output
            A(26)

4. Object methods - 
    -> Objects can also contain methods. Methods in objects are functions that belong to the object.
    e.g.,
        def myfunc(self):
            print("Hello my name is " + self.name)
        
        p1 = Person("John", 34)
        p1.myfunc()

    Note: * The self parameter is a reference to the current instance of the class, and is used to access variables that belong to the class.
          ** It does not have to be named self, you can call it whatever you like, but it has to be the first parameter of any function in the class:
    
    4(a) Modify object properties - 
        p1.age = 50
    
    4(b) Delete object properties - 
        del p1.age 
    
5. Delete Objects - 
    -> del p1 












